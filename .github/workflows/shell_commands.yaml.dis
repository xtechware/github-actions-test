# note workflows and jobs run in parallel
name: Shell Commands
on: [push, workflow_dispatch]
jobs:
  run-linux-commands:
    runs-on: ubuntu-latest
    steps:
      - name: echo a string
        run: echo "Hello World"
      - name: multiline script
        run: |
          node -v
          npm -v
        # v16.18.1
        # 8.19.2          
      - name: python command
        run: |
          import platform
          print(platform.processor())
        shell: python
        # x86_64
      - name: Directory Bash
        run: pwd
        shell: bash
        # /home/runner/work/github-actions-test/github-actions-test
      - name: LS Directory Bash
        run: ls -al
        shell: bash
        # NOTE: This working directory is empty
      # now lets checkout our repo instead
      # see https://github.com/actions/checkout#usage for options
      - name: Checkout
        uses: actions/checkout@v1
        # Syncing repository: xtechware/github-actions-test
        # git version
        # git version 2.38.1
        # git lfs version
        # git-lfs/3.2.0 (GitHub; linux amd64; go 1.18.2)
        # git init "/home/runner/work/github-actions-test/github-actions-test"
        # hint: Using 'master' as the name for the initial branch. This default branch name
        # hint: is subject to change. To configure the initial branch name to use in all
        # hint: of your new repositories, which will suppress this warning, call:
        # hint: 
        # Initialized empty Git repository in /home/runner/work/github-actions-test/github-actions-test/.git/
        # hint: 	git config --global init.defaultBranch <name>
        # hint: 
        # hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
        # hint: 'development'. The just-created branch can be renamed via this command:
        # hint: 
        # hint: 	git branch -m <name>
        # git remote add origin https://github.com/xtechware/github-actions-test
        # git config gc.auto 0
        # git config --get-all http.https://github.com/xtechware/github-actions-test.extraheader
        # git -c http.extraheader="AUTHORIZATION: basic ***" fetch --tags --prune --progress --no-recurse-submodules origin +refs/heads/*:refs/remotes/origin/*        
        # ...
        # From https://github.com/xtechware/github-actions-test
        #  * [new branch]      main       -> origin/main
        # git checkout --progress --force b7ed3bf944cdd8d7cfe8dd285cc6bfd7b5b928c5
        # Note: switching to 'b7ed3bf944cdd8d7cfe8dd285cc6bfd7b5b928c5'.

        # You are in 'detached HEAD' state. You can look around, make experimental
        # changes and commit them, and you can discard any commits you make in this
        # state without impacting any branches by switching back to a branch.

        # If you want to create a new branch to retain commits you create, you may
        # do so (now or later) by using -c with the switch command. Example:

        #   git switch -c <new-branch-name>

        # Or undo this operation with:

        #   git switch -

        # Turn off this advice by setting config variable advice.detachedHead to false

        # HEAD is now at b7ed3bf Add checkout and validation steps
      - name: Checkout Directory Bash
        run: pwd
        shell: bash
        # /home/runner/work/github-actions-test/github-actions-test
      - name: LS Checkout Directory Bash
        run: ls -al
        shell: bash
        # total 20
        # drwxr-xr-x 4 runner docker 4096 Dec  1 16:29 .
        # drwxr-xr-x 3 runner docker 4096 Dec  1 16:29 ..
        # drwxr-xr-x 8 runner docker 4096 Dec  1 16:29 .git
        # drwxr-xr-x 3 runner docker 4096 Dec  1 16:29 .github
        # -rw-r--r-- 1 runner docker   21 Dec  1 16:29 README.md
      - name: Environment Variables and Misc
        shell: bash
        run: |
          printenv | grep 'GITHUB'
          echo "${{github.token}}"
          git remote -vv
          git status
        # GITHUB_WORKSPACE=/home/runner/work/github-actions-test/github-actions-test
        # GITHUB_PATH=/home/runner/work/_temp/_runner_file_commands/add_path_eca5824b-cee9-4258-a6b9-e24139120d3c
        # GITHUB_ACTION=__run_8
        # GITHUB_RUN_NUMBER=29
        # GITHUB_TRIGGERING_ACTOR=jfgudk
        # GITHUB_REF_TYPE=branch
        # GITHUB_ACTIONS=true
        # GITHUB_SHA=1dfceafa51498f66a148803ae0a205d1596339a8 // NOTE: triggering commit
        # GITHUB_REF=refs/heads/main
        # GITHUB_REF_PROTECTED=false
        # GITHUB_API_URL=https://api.github.com
        # GITHUB_STATE=/home/runner/work/_temp/_runner_file_commands/save_state_eca5824b-cee9-4258-a6b9-e24139120d3c
        # GITHUB_ENV=/home/runner/work/_temp/_runner_file_commands/set_env_eca5824b-cee9-4258-a6b9-e24139120d3c
        # GITHUB_EVENT_PATH=/home/runner/work/_temp/_github_workflow/event.json
        # GITHUB_EVENT_NAME=push
        # GITHUB_RUN_ID=3594697148
        # GITHUB_STEP_SUMMARY=/home/runner/work/_temp/_runner_file_commands/step_summary_eca5824b-cee9-4258-a6b9-e24139120d3c
        # GITHUB_ACTOR=jfgudk
        # GITHUB_RUN_ATTEMPT=1
        # GITHUB_GRAPHQL_URL=https://api.github.com/graphql
        # GITHUB_SERVER_URL=https://github.com
        # GITHUB_REF_NAME=main
        # GITHUB_JOB=run-linux-commands
        # GITHUB_REPOSITORY=xtechware/github-actions-test
        # GITHUB_RETENTION_DAYS=90
        # GITHUB_ACTION_REPOSITORY=
        # GITHUB_BASE_REF=
        # GITHUB_REPOSITORY_OWNER=xtechware
        # GITHUB_HEAD_REF=
        # GITHUB_ACTION_REF=
        # GITHUB_WORKFLOW=Shell Commands
        # GITHUB_OUTPUT=/home/runner/work/_temp/_runner_file_commands/set_output_eca5824b-cee9-4258-a6b9-e24139120d3c
        # *** // NOTE: github.token is obfuscated
        # origin	https://github.com/xtechware/github-actions-test (fetch)
        # origin	https://github.com/xtechware/github-actions-test (push)
        # HEAD detached at 1dfceaf 
  run-windows-commands:
    runs-on: windows-latest
    # this causes this to run in series to 
    needs: [run-linux-commands]
    steps:
      - name: Directory Powershell
        run: Get-Location
        # Path
        # ----
        # D:\a\github-actions-test\github-actions-test
      - name: Directory Windows Shell
        run: cd
        shell: cmd
        # D:\a\github-actions-test\github-actions-test
      - name: Directory Bash
        run: pwd
        shell: bash
        # /d/a/github-actions-test/github-actions-test
      - name: LS Directory Bash
        run: ls -al
        shell: bash
        # NOTE: This working directory is empty
      # now lets checkout our repo instead
      # see https://github.com/actions/checkout#usage for options
      - name: Checkout
        uses: actions/checkout@v1
        # same as above
      - name: Checkout Directory Bash
        run: pwd
        shell: bash
        # /d/a/github-actions-test/github-actions-test
      - name: LS Checkout Directory Bash
        run: ls -al
        shell: bash
        # total 5
        # drwxr-xr-x 1 runneradmin 197121  0 Dec  1 16:30 .
        # drwxr-xr-x 1 runneradmin 197121  0 Dec  1 16:30 ..
        # drwxr-xr-x 1 runneradmin 197121  0 Dec  1 16:30 .git
        # drwxr-xr-x 1 runneradmin 197121  0 Dec  1 16:30 .github
        # -rw-r--r-- 1 runneradmin 197121 21 Dec  1 16:30 README.md
      - name: Environment Variables and Misc
        shell: bash
        run: |
          printenv | grep 'GITHUB'
          echo "${{github.token}}"
          git remote -vv
          git status
        # similar to above but with Windows pathing - why?
